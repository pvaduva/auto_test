#!/usr/bin/env expect-lite

;;;

Create various flavors using different number of CPUs and different size of Memoryies.

TC1 Create a flavour with minimum cpu and launch a vm, perform vm maintenance

TC2 Create a flavour with min memory and launch a vm, perform vm maintenance.

TC3 Create a flavour with max memory and launch a vm, perform vm maintenance

TC4 Create a flavour with maximum cpu and launch a vm, perform vm maintenance


In each case, the following tests are performed:
the exstra specs of the flavor is set to True/False randomly
;;;


*EXP_INFO
*NOFAIL

; record starting time 
>date

>echo "Start test TASK80733 of us52193"

#>ssh -X -o UserKnownHostsFIle=/dev/null -o StrictHostKeyChecking=no $HOST_USER@$HOST_IP
>ssh -o UserKnownHostsFIle=/dev/null -o StrictHostKeyChecking=no $HOST_USER@$HOST_IP
#<ssword:
<assword|SYSTEM:|WARNING:
>>$HOST_PASSWD

>export TMOUT=0

@3
>source /etc/nova/openrc

; settings 

; get keypair
>nova keypair-list
+$KEYPAIR=\|\s*([a-z0-9-]+)\s*\|\s*[a-z0-9:]+\s*\|
?if $KEYPAIR == __NO_STRING_CAPTURED__ ? [
    *TERM
]

; get public netid

# there's something wrong, expect-lite will append a trailling space to the variable
#>neutron net-list | grep -i 'public' | head -n1 | cut -d\| -f2 | awk '{print $1}' | tr -d " "
#+$PUB_NET0=\n(.*) 
#>echo $PUB_NET0 | awk '{print $1}'
#+$PUB_NET=\n(.*)

# this way, no trailling space 
>neutron net-list 
#+$PUB_NET=([a-z0-9-]{32,36})\s+\|\s*public|([a-z0-9-]{32,36})\s+\|\s*external
+$PUB_NET=([a-z0-9-]{32,36})\s*\|\s*external
?if $PUB_NET == __NO_STRING_CAPTURED__ ? [
    *TERM
]

; get internal netid
>neutron net-list 
+$INT_NET=([a-z0-9-]{32,36})\s*\|\s*internal
?if $INT_NET == __NO_STRING_CAPTURED__ ? [
    *TERM
]

; get image
>nova image-list
+$IMAGE=([a-z0-9-]{32,36})\s*\|\s*cgcs
?if $IMAGE == __NO_STRING_CAPTURED__ ? [
    *TERM
]

# 
$MINMEM=128

;  create flavor with minimum memory and minimum number of cpus, with 0 type of extra specs
$VMNM=ta80733_vm_1
$FLVNM=flv_ta80733_1_mincpu_minmem
~fun_create_instance.inc FLVNM=$FLVNM FLVID=auto FLVRAM=$MINMEM FLVDISK=0 FLVCPU=1 VMNM=$VMNM

;  create flavor with minimum memory and minimum number of cpus, with 1 type of extra specs
$VMNM=ta80733_vm_2
$FLVNM=flv_ta80733_2_mincpu_minmem
~fun_create_instance.inc FLVNM=$FLVNM FLVID=auto FLVRAM=$MINMEM FLVDISK=0 FLVCPU=1 VMNM=$VMNM

;  create flavor with maximum memory (1/2 of the total memory) and minimum number of cpus
; get size of memory
@60
>vm-topology -s computes
+$FREEMEM1=\|\s*compute-[0-9]*\s*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|\s*[^\|]*\s*\|\s*[^\|]*\s*\|\s*([0-9]+)\s*
+$FREEMEM2=\|\s*compute-[0-9]*\s*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|\s*[^\|]*\s*\|\s*[^\|]*\s*\|\s*([0-9]+)\s*
=$FREEMEM1

$FREEMEM=$FREEMEM1
; 1G less memory
=$FREEMEM - 1000
?if $FREEMEM < 128 ? [
    $FREEMEM=128
]

#?if $FREEMEM2 < $FREEMEM1 ?[
#    $FREEMEM=$$FREEMEM2
#]

$VMNM=ta80733_vm_3
$FLVNM=flv_ta80733_3_mincpu_maxmem
$DDTD_CPUS=True
$GST_HREARTBEAT=False
~fun_create_instance.inc FLVNM=$FLVNM FLVID=auto FLVRAM=$FREEMEM FLVDISK=0 FLVCPU=1 VMNM=$VMNM DDTD_CPUS=$DDTD_CPUS GST_HREARTBEAT=$GST_HREARTBEAT


;  create flavor with minimum memory and maximum number of cpus
; get size of memory
@60
>vm-topology -s computes
+$NCPUS=\|\s*compute-[0-9]*\s*\|[^\|]*\|[^\|]*\|[^\|]*\|[^\|]*\|\s*([0-9]+)\s*\|
=$NCPUS / 2 
=$NCPUS - 3
? $NCPUS < 1 ? $NCPUS=1

$VMNM=ta80733_vm_4
$FLVNM=flv_ta80733_4_maxcpu_minmem
$DDTD_CPUS=False
$GST_HREARTBEAT=True
~fun_create_instance.inc FLVNM=$FLVNM FLVID=auto FLVRAM=$MINMEM FLVDISK=0 FLVCPU=$NCPUS VMNM=$VMNM DDTD_CPUS=$DDTD_CPUS GST_HREARTBEAT=$GST_HREARTBEAT


;  create flavor with maximum memory and maximum number of CPUs
; get the number of CPUs on the compute
$VMNM=ta80733_vm_5
$FLVNM=flv_ta80733_5_maxcpu_maxmem
$DDTD_CPUS=False
$GST_HREARTBEAT=False

~fun_create_instance.inc FLVNM=$FLVNM FLVID=auto FLVRAM=$FREEMEM FLVDISK=0 FLVCPU=$NCPUS VMNM=$VMNM DDTD_CPUS=$DDTD_CPUS GST_HREARTBEAT=$GST_HREARTBEAT


