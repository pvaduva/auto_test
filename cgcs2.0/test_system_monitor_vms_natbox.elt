#!/usr/bin/env expect-lite

# How to use this expect-lite file, Lines that begin with:
#	'>' send to remote host, implies "wait for prompt"
#	'<' _MUST_ be received from the remote host, or this config script will fail
#	# are comment lines, and have no effect
#	; are printable (in stdout) comments, and have no other effect
#	@ change the expect timeout value
#	! Embedded Expect commands
# For more info see: expect-lite.html
;;;
#
#	system test monitor running VMs (via NAT box) and swact controllers
#
#
#	Options:
#		vm_name=<desired vm name>

#

;;;

*EXP_INFO
*NOFAIL

# common include path
$inc_path=common/el

# fail script
*~$inc_path/util/fail_show.inc

$IP=10.10.10.2

$natbox=128.224.150.11

# cgcs credentials
$vm_user=root
$vm_pass=root

$vm_fs_cmd=while (true) do date; dd if=/dev/urandom of=output.txt bs=1k count=1 || break ; echo ; sleep 1; done 2>&1 | tee trace.txt &
$vm_cmd_fs_check=mount | grep 'on / type' | grep 'rw,re'

# vars for launching extra VM
# VM names
$guest1=VM1
$vcpu_size=1
$test_flavor=big
$test_flavor_uuid=5f0d748b-1c8b-4a70-8643-4d57e25ac137
$tenant_credentials=/home/wrsroot/openrc.tenant1
$tenant=$tenant_credentials
# trim to just last part
=$tenant;.*[.](\w+);\1;
$glance_image_name=cgcs-guest





; === log onto controller
~$inc_path/node/ssh_controller.inc


@30
; === get list of active VM management IPs
>nova list --all-tenants | grep mgmt-net | awk -F"-mgmt-net=" '{print $2}' | awk '{print $1}' |tr -d  ',' |tr -d  ';'| paste -sd' '
+$vm_ip_list=\n([0-9. ]+)

? $vm_ip_list == __NO_STRING_CAPTURED__ ? *FAIL

*INTERACT

@15
*FORK NATBOX
; === log onto controller
~$inc_path/node/ssh_controller.inc user=cgcs IP=$natbox


#$vm_ip_list=192.168.104.50

# create monitor list
$vm_ip_mon_list=$vm_ip_list
=$vm_ip_mon_list/ /,/

; === monitoring vm management ip addresses
>python tools/monitor.py --addresses $vm_ip_mon_list
*INTERACT
@3
; get out of the monitor
!send "Q\r"
>>
>




>
*INTERACT

; === cleanup

